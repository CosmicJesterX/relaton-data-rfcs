---
id: IETFRFC4819
title:
  type: main
  content: Secure Shell Public Key Subsystem
  format: text/plain
link:
  content: https://www.rfc-editor.org/info/rfc4819
  type: src
type: standard
docid:
- id: IETF RFC4819
  type: IETF
- id: 10.17487/RFC4819
  type: DOI
docnumber: RFC4819
date:
  type: published
  value: 2007-03
contributor:
- person:
    name:
      completename:
        content: J. Galbraith
        language: en
        script: Latn
  role: author
- person:
    name:
      completename:
        content: J. Van Dyke
        language: en
        script: Latn
  role: author
- person:
    name:
      completename:
        content: J. Bright
        language: en
        script: Latn
  role: author
revdate: 2007-03
language: en
script: Latn
abstract:
  content: Secure Shell defines a user authentication mechanism that is based on public
    keys, but does not define any mechanism for key distribution. No common key management
    solution exists in current implementations. This document describes a protocol
    that can be used to configure public keys in an implementation-independent fashion,
    allowing client software to take on the burden of this configuration. The Public
    Key Subsystem provides a server-independent mechanism for clients to add public
    keys, remove public keys, and list the current public keys known by the server.
    Rights to manage public keys are specific and limited to the authenticated user.
    A public key may also be associated with various restrictions, including a mandatory
    command or subsystem. [STANDARDS-TRACK]
  language: en
  script: Latn
  format: text/html
fetched: '2021-12-20'
keyword:
- ssh
- ssh2
editorialgroup:
  name: secsh
